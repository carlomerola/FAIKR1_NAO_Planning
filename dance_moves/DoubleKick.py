# Choregraphe bezier export in Python.
from naoqi import ALProxy
import sys
from utils import *

names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([6.4])
keys.append([[-0.17, [3, -2.14667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([6.4])
keys.append([[0, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[0.0874194, [3, -0.186667, 0], [3, 0.146667, 0]], [0.0874194, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0874194, [3, -0.173333, 0], [3, 0.173333, 0]], [0.0874194, [3, -0.173333, 0], [3, 0.146667, 0]], [0.0874194, [3, -0.146667, 0], [3, 0.186667, 0]], [0.0874194, [3, -0.186667, 0], [3, 0.186667, 0]], [0.0874194, [3, -0.186667, 0], [3, 0.946667, 0]], [0.0874194, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-0.106994, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.106994, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.106994, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.106994, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.106994, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.106994, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.106994, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.106994, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([6.4])
keys.append([[-0.42443, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([6.4])
keys.append([[-1.20326, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([6.4])
keys.append([[0.298285, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[0.290416, [3, -0.186667, 0], [3, 0.146667, 0]], [0.340973, [3, -0.146667, 0], [3, 0.173333, 0]], [0.290416, [3, -0.173333, 0.0353797], [3, 0.173333, -0.0353797]], [0.128695, [3, -0.173333, 0], [3, 0.146667, 0]], [0.290416, [3, -0.146667, -0.03661], [3, 0.186667, 0.0465946]], [0.378308, [3, -0.186667, 0], [3, 0.186667, 0]], [0.290416, [3, -0.186667, 0.0137075], [3, 0.946667, -0.0695165]], [0.128637, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[0.115024, [3, -0.186667, 0], [3, 0.146667, 0]], [0.115024, [3, -0.146667, 0], [3, 0.173333, 0]], [0.115024, [3, -0.173333, 0], [3, 0.173333, 0]], [0.115024, [3, -0.173333, 0], [3, 0.146667, 0]], [0.115024, [3, -0.146667, 0], [3, 0.186667, 0]], [0.115024, [3, -0.186667, 0], [3, 0.186667, 0]], [0.115024, [3, -0.186667, 0], [3, 0.946667, 0]], [0.115024, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-0.17001, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.17001, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.17001, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.17001, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.17001, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.17001, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.17001, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.17001, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-0.0923279, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.0923279, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.0923279, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.0923279, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0923279, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.0923279, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.0923279, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.0923279, [3, -0.946667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([6.4])
keys.append([[1.43788, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([6.4])
keys.append([[0.22859, [3, -2.14667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([6.4])
keys.append([[0.0987845, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[0.0874194, [3, -0.186667, 0], [3, 0.146667, 0]], [0.0874193, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0874194, [3, -0.173333, 0], [3, 0.173333, 0]], [0.0874193, [3, -0.173333, 0], [3, 0.146667, 0]], [0.0874194, [3, -0.146667, 0], [3, 0.186667, 0]], [0.0874193, [3, -0.186667, 0], [3, 0.186667, 0]], [0.0874194, [3, -0.186667, 0], [3, 0.946667, 0]], [0.0874193, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[0.10699, [3, -0.186667, 0], [3, 0.146667, 0]], [0.10699, [3, -0.146667, 0], [3, 0.173333, 0]], [0.10699, [3, -0.173333, 0], [3, 0.173333, 0]], [0.10699, [3, -0.173333, 0], [3, 0.146667, 0]], [0.10699, [3, -0.146667, 0], [3, 0.186667, 0]], [0.10699, [3, -0.186667, 0], [3, 0.186667, 0]], [0.10699, [3, -0.186667, 0], [3, 0.946667, 0]], [0.10699, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([6.4])
keys.append([[0.414455, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([6.4])
keys.append([[1.20252, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([6.4])
keys.append([[0.298285, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-1.10742, [3, -0.186667, 0], [3, 0.146667, 0]], [-1.32505, [3, -0.146667, 0], [3, 0.173333, 0]], [-1.10742, [3, -0.173333, -0.137623], [3, 0.173333, 0.137623]], [-0.49931, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.10742, [3, -0.146667, 0.045364], [3, 0.186667, -0.057736]], [-1.16515, [3, -0.186667, 0], [3, 0.186667, 0]], [-1.10742, [3, -0.186667, -0.057736], [3, 0.946667, 0.292804]], [0.119467, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-0.115018, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.115018, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.115018, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.115018, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.115018, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.115018, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.115018, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.115018, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[-0.17001, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.17001, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.17001, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.17001, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.17001, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.17001, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.17001, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.17001, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.52, 0.96, 1.48, 2, 2.44, 3, 3.56, 6.4])
keys.append([[1.21428, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.090962, [3, -0.146667, 0], [3, 0.173333, 0]], [1.21428, [3, -0.173333, 0], [3, 0.173333, 0]], [0.70888, [3, -0.173333, 0], [3, 0.146667, 0]], [1.21428, [3, -0.146667, 0], [3, 0.186667, 0]], [-0.0397834, [3, -0.186667, 0], [3, 0.186667, 0]], [1.21428, [3, -0.186667, 0], [3, 0.946667, 0]], [-0.0849329, [3, -0.946667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([6.4])
keys.append([[1.43344, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([6.4])
keys.append([[-0.232446, [3, -2.14667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([6.4])
keys.append([[0.0987845, [3, -2.14667, 0], [3, 0, 0]]])



try:
  robotIP = "127.0.0.1"
  port = 9559

  if len(sys.argv) <= 1:
    print "(robotIP default: 127.0.0.1)"
  elif len(sys.argv) <= 2:
    robotIP = sys.argv[1]
  else:
    port = int(sys.argv[2])
    robotIP = sys.argv[1]

  motion = ALProxy("ALMotion",robotIP,port)
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err