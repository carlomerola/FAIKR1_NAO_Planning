# Choregraphe bezier export in Python.
from naoqi import ALProxy
import sys
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.00587852, [3, -0.12, 0], [3, 0.4, 0]], [0.222388, [3, -0.4, 0], [3, 0.2, 0]], [0.0735901, [3, -0.2, 0], [3, 0.2, 0]], [0.294486, [3, -0.2, 0], [3, 0.2, 0]], [-0.227074, [3, -0.2, 0.00536863], [3, 0.4, -0.0107373]], [-0.237812, [3, -0.4, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.00606161, [3, -0.12, 0], [3, 0.4, 0]], [0.550664, [3, -0.4, 0], [3, 0.2, 0]], [-0.119694, [3, -0.2, 0], [3, 0.2, 0]], [0.501576, [3, -0.2, 0], [3, 0.2, 0]], [-0.472515, [3, -0.2, 0], [3, 0.4, 0]], [-4.19617e-05, [3, -0.4, 0], [3, 0.2, 0]], [-0.00606161, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.35, [3, -0.12, 0], [3, 0.4, 0]], [0.0966001, [3, -0.4, 0], [3, 0.2, 0]], [0.0966001, [3, -0.2, 0], [3, 0.2, 0]], [-0.190258, [3, -0.2, 0.0976648], [3, 0.2, -0.0976648]], [-0.489389, [3, -0.2, 0], [3, 0.4, 0]], [0.0981341, [3, -0.4, 0], [3, 0.2, 0]], [-0.348714, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[0, [3, -0.12, 0], [3, 0.4, 0]], [-0.116542, [3, -0.4, 0.0558963], [3, 0.2, -0.0279482]], [-0.251533, [3, -0.2, 0], [3, 0.2, 0]], [0.0583338, [3, -0.2, 0], [3, 0.2, 0]], [-0.211651, [3, -0.2, 0], [3, 0.4, 0]], [-0.115008, [3, -0.4, -0.0459354], [3, 0.2, 0.0229677]], [-0.00494176, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[-1.0096, [3, -0.12, 0], [3, 0.2, 0]], [-1.017, [3, -0.2, 0.00740445], [3, 0.2, -0.00740445]], [-1.39897, [3, -0.2, 0.0230086], [3, 0.2, -0.0230086]], [-1.42198, [3, -0.2, 0], [3, 0.2, 0]], [-1.42198, [3, -0.2, 0], [3, 0.2, 0]], [-1.52936, [3, -0.2, 0], [3, 0.2, 0]], [-0.414139, [3, -0.2, 0], [3, 0.2, 0]], [-0.417205, [3, -0.2, 0.00306656], [3, 0.2, -0.00306656]], [-1.00172, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[-1.38117, [3, -0.12, 0], [3, 0.2, 0]], [0.075124, [3, -0.2, 0], [3, 0.2, 0]], [-4.19617e-05, [3, -0.2, 0.01534], [3, 0.2, -0.01534]], [-0.016916, [3, -0.2, 0], [3, 0.2, 0]], [-0.016916, [3, -0.2, 0], [3, 0.2, 0]], [-0.237812, [3, -0.2, 0.210925], [3, 0.2, -0.210925]], [-1.28247, [3, -0.2, 0], [3, 0.2, 0]], [-1.18582, [3, -0.2, 0], [3, 0.2, 0]], [-1.38706, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[0.255131, [3, -0.12, 0], [3, 0.2, 0]], [0.8468, [3, -0.2, 0], [3, 0.2, 0]], [0.8468, [3, -0.2, 0], [3, 0.2, 0]], [0.8484, [3, -0.2, 0], [3, 0.2, 0]], [0.8484, [3, -0.2, 0], [3, 0.2, 0]], [0.8472, [3, -0.2, 0.00120002], [3, 0.2, -0.00120002]], [0.3056, [3, -0.2, 0], [3, 0.2, 0]], [0.3056, [3, -0.2, 0], [3, 0.2, 0]], [0.258687, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.45, [3, -0.12, 0], [3, 0.4, 0]], [0.136568, [3, -0.4, -0.052156], [3, 0.2, 0.026078]], [0.162646, [3, -0.2, 0], [3, 0.2, 0]], [0.0429941, [3, -0.2, 0.116328], [3, 0.2, -0.116328]], [-0.535324, [3, -0.2, 0], [3, 0.4, 0]], [0.14117, [3, -0.4, 0], [3, 0.2, 0]], [-0.448304, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[0, [3, -0.12, 0], [3, 0.4, 0]], [0.115092, [3, -0.4, -0.0695506], [3, 0.2, 0.0347753]], [0.312978, [3, -0.2, 0], [3, 0.2, 0]], [-0.260738, [3, -0.2, 0], [3, 0.2, 0]], [0.431096, [3, -0.2, 0], [3, 0.4, 0]], [0.113558, [3, -0.4, 0.0947149], [3, 0.2, -0.0473574]], [0.00487945, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.00428384, [3, -0.12, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, 0], [3, 0.2, 0]], [-0.171766, [3, -0.2, 0], [3, 0.2, 0]], [-0.240796, [3, -0.2, 0.067496], [3, 0.2, -0.067496]], [-0.576742, [3, -0.2, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, -0.12651], [3, 0.2, 0.0632551]], [-0.00744649, [3, -0.2, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[0.7, [3, -0.12, 0], [3, 0.4, 0]], [-0.090548, [3, -0.4, 0.00306793], [3, 0.2, -0.00153396]], [-0.092082, [3, -0.2, 0], [3, 0.2, 0]], [0.423342, [3, -0.2, -0.238026], [3, 0.2, 0.238026]], [1.33607, [3, -0.2, 0], [3, 0.4, 0]], [-0.092082, [3, -0.4, 0], [3, 0.2, 0]], [0.697728, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[1.40728, [3, -0.12, 0], [3, 0.2, 0]], [0.920358, [3, -0.2, 0], [3, 0.2, 0]], [1.42965, [3, -0.2, 0], [3, 0.2, 0]], [1.41891, [3, -0.2, 0], [3, 0.2, 0]], [1.42044, [3, -0.2, 0], [3, 0.2, 0]], [1.14279, [3, -0.2, 0], [3, 0.2, 0]], [1.43271, [3, -0.2, -0.0603375], [3, 0.2, 0.0603375]], [1.50481, [3, -0.2, 0], [3, 0.2, 0]], [1.40243, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[0.293981, [3, -0.12, 0], [3, 0.2, 0]], [0.375789, [3, -0.2, -0.0744832], [3, 0.2, 0.0744832]], [0.74088, [3, -0.2, -0.0398843], [3, 0.2, 0.0398843]], [0.780764, [3, -0.2, 0], [3, 0.2, 0]], [0.771559, [3, -0.2, 0.00920488], [3, 0.2, -0.00920488]], [0.67952, [3, -0.2, 0.0723535], [3, 0.2, -0.0723535]], [0.337438, [3, -0.2, 0.0915286], [3, 0.2, -0.0915286]], [0.130348, [3, -0.2, 0], [3, 0.2, 0]], [0.299613, [3, -0.2, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[0.00355184, [3, -0.12, 0], [3, 0.2, 0]], [-0.731761, [3, -0.2, 0.150931], [3, 0.2, -0.150931]], [-0.902033, [3, -0.2, 0.018408], [3, 0.2, -0.018408]], [-0.920441, [3, -0.2, 0], [3, 0.2, 0]], [-0.920441, [3, -0.2, 0], [3, 0.2, 0]], [-0.38661, [3, -0.2, -0.16874], [3, 0.2, 0.16874]], [0.091998, [3, -0.2, 0], [3, 0.2, 0]], [0.0889301, [3, -0.2, 0.00306794], [3, 0.2, -0.00306794]], [0.0026994, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.35, [3, -0.12, 0], [3, 0.4, 0]], [0.10282, [3, -0.4, 0], [3, 0.2, 0]], [-0.095066, [3, -0.2, 0.0782339], [3, 0.2, -0.0782339]], [-0.366584, [3, -0.2, 0.0930628], [3, 0.2, -0.0930628]], [-0.653443, [3, -0.2, 0], [3, 0.4, 0]], [0.105888, [3, -0.4, 0], [3, 0.2, 0]], [-0.348692, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[0.00178325, [3, -0.12, 0], [3, 0.4, 0]], [0.073674, [3, -0.4, 0], [3, 0.2, 0]], [0.00771189, [3, -0.2, 0], [3, 0.2, 0]], [0.391212, [3, -0.2, 0], [3, 0.2, 0]], [0.021518, [3, -0.2, 0], [3, 0.4, 0]], [0.07214, [3, -0.4, 0], [3, 0.2, 0]], [0.000206945, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[1.0096, [3, -0.12, 0], [3, 0.2, 0]], [1.28247, [3, -0.2, -0.00153425], [3, 0.2, 0.00153425]], [1.284, [3, -0.2, -0.00153425], [3, 0.2, 0.00153425]], [1.29627, [3, -0.2, 0], [3, 0.2, 0]], [1.29474, [3, -0.2, 0.00153411], [3, 0.2, -0.00153411]], [1.27019, [3, -0.2, 0.0245428], [3, 0.2, -0.0245428]], [0.417291, [3, -0.2, 0], [3, 0.2, 0]], [0.418823, [3, -0.2, -0.00153238], [3, 0.2, 0.00153238]], [1.0018, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[1.38031, [3, -0.12, 0], [3, 0.2, 0]], [-0.251617, [3, -0.2, 0], [3, 0.2, 0]], [-0.239346, [3, -0.2, -0.00562462], [3, 0.2, 0.00562462]], [-0.217869, [3, -0.2, 0], [3, 0.2, 0]], [-0.222472, [3, -0.2, 0], [3, 0.2, 0]], [-0.193327, [3, -0.2, -0.0291453], [3, 0.2, 0.0291453]], [1.17807, [3, -0.2, 0], [3, 0.2, 0]], [1.16273, [3, -0.2, 0], [3, 0.2, 0]], [1.38677, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[0.25, [3, -0.12, 0], [3, 0.2, 0]], [0.9284, [3, -0.2, 0], [3, 0.2, 0]], [0.9284, [3, -0.2, 0], [3, 0.2, 0]], [0.9304, [3, -0.2, 0], [3, 0.2, 0]], [0.9304, [3, -0.2, 0], [3, 0.2, 0]], [0.9284, [3, -0.2, 0.00200003], [3, 0.2, -0.00200003]], [0.3096, [3, -0.2, 0.00319999], [3, 0.2, -0.00319999]], [0.3064, [3, -0.2, 0.00319999], [3, 0.2, -0.00319999]], [0.252423, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.45, [3, -0.12, 0], [3, 0.4, 0]], [0.131882, [3, -0.4, -0.00306793], [3, 0.2, 0.00153396]], [0.133416, [3, -0.2, 0], [3, 0.2, 0]], [0.131882, [3, -0.2, 0.00153396], [3, 0.2, -0.00153396]], [-0.0767419, [3, -0.2, 0], [3, 0.4, 0]], [0.130348, [3, -0.4, 0], [3, 0.2, 0]], [-0.448335, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.00162949, [3, -0.12, 0], [3, 0.4, 0]], [-0.0643861, [3, -0.4, 0], [3, 0.2, 0]], [0.046062, [3, -0.2, 0], [3, 0.2, 0]], [-0.671851, [3, -0.2, 0], [3, 0.2, 0]], [0.0767419, [3, -0.2, 0], [3, 0.4, 0]], [-0.06592, [3, -0.4, 0], [3, 0.2, 0]], [-0.000189102, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[-0.00428384, [3, -0.12, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, 0], [3, 0.2, 0]], [-0.171766, [3, -0.2, 0], [3, 0.2, 0]], [-0.240796, [3, -0.2, 0.067496], [3, 0.2, -0.067496]], [-0.576742, [3, -0.2, 0], [3, 0.4, 0]], [-0.1733, [3, -0.4, -0.12651], [3, 0.2, 0.0632551]], [-0.00744649, [3, -0.2, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.36, 1.56, 2.16, 2.76, 3.36, 4.56, 5.16])
keys.append([[0.7, [3, -0.12, 0], [3, 0.4, 0]], [-0.091998, [3, -0.4, 0], [3, 0.2, 0]], [0.131966, [3, -0.2, -0.0912732], [3, 0.2, 0.0912732]], [0.455641, [3, -0.2, -0.172319], [3, 0.2, 0.172319]], [1.16588, [3, -0.2, 0], [3, 0.4, 0]], [-0.0923279, [3, -0.4, 0], [3, 0.2, 0]], [0.697727, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[1.40619, [3, -0.12, 0], [3, 0.2, 0]], [1.08611, [3, -0.2, 0], [3, 0.2, 0]], [1.17355, [3, -0.2, -0.00766897], [3, 0.2, 0.00766897]], [1.18122, [3, -0.2, 0], [3, 0.2, 0]], [1.18122, [3, -0.2, 0], [3, 0.2, 0]], [1.15975, [3, -0.2, 0], [3, 0.2, 0]], [1.37911, [3, -0.2, -0.0547126], [3, 0.2, 0.0547126]], [1.48802, [3, -0.2, 0], [3, 0.2, 0]], [1.4004, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[-0.292649, [3, -0.12, 0], [3, 0.2, 0]], [-0.610574, [3, -0.2, 0], [3, 0.2, 0]], [-0.610574, [3, -0.2, 0], [3, 0.2, 0]], [-0.638187, [3, -0.2, 0.00153418], [3, 0.2, -0.00153418]], [-0.639721, [3, -0.2, 0], [3, 0.2, 0]], [-0.630516, [3, -0.2, -0.00920488], [3, 0.2, 0.00920488]], [-0.319114, [3, -0.2, -0.0879493], [3, 0.2, 0.0879493]], [-0.10282, [3, -0.2, 0], [3, 0.2, 0]], [-0.297548, [3, -0.2, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.36, 0.96, 1.56, 2.16, 2.76, 3.36, 3.96, 4.56, 5.16])
keys.append([[0.00231223, [3, -0.12, 0], [3, 0.2, 0]], [0.84826, [3, -0.2, 0], [3, 0.2, 0]], [0.846726, [3, -0.2, 0.00153411], [3, 0.2, -0.00153411]], [0.825251, [3, -0.2, 0], [3, 0.2, 0]], [0.825251, [3, -0.2, 0], [3, 0.2, 0]], [0.812978, [3, -0.2, 0.0122732], [3, 0.2, -0.0122732]], [0.0398422, [3, -0.2, 0], [3, 0.2, 0]], [0.131882, [3, -0.2, 0], [3, 0.2, 0]], [0.00400317, [3, -0.2, 0], [3, 0, 0]]])

try:
  robotIP = "127.0.0.1"
  port = 9559

  if len(sys.argv) <= 1:
    print "(robotIP default: 127.0.0.1)"
  elif len(sys.argv) <= 2:
    robotIP = sys.argv[1]
  else:
    port = int(sys.argv[2])
    robotIP = sys.argv[1]

  motion = ALProxy("ALMotion",robotIP,port)
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err